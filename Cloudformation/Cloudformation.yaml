AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This CloudFormation template provisions the AWS infrastructure required for deploying
  a scalable Django-based Movie Recommendation System. The resources provisioned include 
  VPC, EC2 instances, RDS, Application Load Balancer (ALB), S3 for static file hosting, 
  Route 53 for DNS management, and necessary security groups.

Metadata: 
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: CloudFront Distribution 
      Parameters:
      - DomainName
      - ACMcertificateArn
      - MinimumProtocolVersion
      - SslSupportMethod
      - SSLcertificateArn
    - Label:
        default: Application Configuration
      Parameters:
      - KeyName
      - LatestAmiId
      - BastionInstanceType
      - EC2ServerInstanceType
      - SSHLocation
      - S3Bucket      
    - Label:
        default: Database Configuration
      Parameters:
      - DBPassword
    - Label:
        default: Amazon OpenSearch Service
      Parameters:
      - ElasticsearchVersion
      - InstanceTypeForDataNode
      - NumberOfDataNodes
      - ElasticSearchDomainName
      - EBSVolumeSize

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

  BastionInstanceType:
    Description: EC2 instance type for the bastion host (used for public SSH access).
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium

  EC2ServerInstanceType:
    Description: The instance type that will be used for Web and App servers. 
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large

  SSHLocation:
    Description: The IP address range that can be used to SSH to the Bastion host
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  DomainName:
    Type: String
    Default: example.com

  ACMcertificateArn:
    Type: String
    Description: The ACM certificate Arn for the domain in the specific region where
      you are running this CloudFormation.
    Default: arn:aws:acm:us-east-1:xxxxxxxxx:certificate/xxxxxx

  SSLcertificateArn:
    Type: String
    Description: The ACM certificate ARN of the domainName in us-east-1 region. This will be used by CloudFront.
    Default: arn:aws:acm:us-east-1:xxxxxxxxx:certificate/xxxxxx

  SslSupportMethod:
    Description: Specifies how CloudFront serves HTTPS requests.
    Type: String
    Default: "sni-only"
    AllowedValues:
      - sni-only
      - vip

  MinimumProtocolVersion:
    Description: The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections.
    Type: String
    Default: "TLSv1.2_2018"
    AllowedValues:
      - TLSv1
      - TLSv1.2_2018
      - TLSv1.1_2016

  ElasticsearchVersion:
    Type: String
    AllowedValues: ['5.6', '6.8', '7.9']
    Default: 7.9
    Description: The version of Amazon OpenSearch Service to use.

  InstanceTypeForDataNode:
    Type: String
    Default: 'm5.large.elasticsearch'
    AllowedValues:
      - m5.large.elasticsearch
      - m5.xlarge.elasticsearch

  NumberOfDataNodes:
    Type: Number
    Default: 1
    Description: The number of data nodes (instances) to use in the OpenSearch Service domain.

  ElasticSearchDomainName:
    Description: Name for the Amazon OpenSearch domain.
    Type: String
    Default: my-es-domain

  EBSVolumeSize:
    Description: 'The size of the EBS volume for each data node.'
    Type: Number
    Default: 10

  DBPassword:
    NoEcho: 'true'
    Description: Database administrator account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain only alphanumeric characters.

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.192.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-vpc

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIPAddress.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub NAT-${AWS::StackName}

  ElasticIPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.192.10.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-a

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.192.30.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-private-a

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation

  Bastion:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref BastionInstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeleteOnTermination: true
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnet1
          GroupSet:
            - !Ref BastionSecurityGroup
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: Bastion

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP/SSH access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref EC2ServerInstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeleteOnTermination: true
          DeviceIndex: 0
          SubnetId: !Ref PrivateSubnetA
          GroupSet:
            - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: WebServer
      ImageId: !Ref LatestAmiId
      UserData: !Base64 |
        #!/bin/bash -xe
        yum update -y
        yum install -y httpd
        systemctl start httpd

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB security group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref PublicSubnet1

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 15
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      Targets:
        - Id: !Ref WebServer

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: postgres
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      MasterUsername: admin
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups:
        - !Ref WebServerSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS subnet group
      SubnetIds:
        - !Ref PrivateSubnetA

  ElasticsearchDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      ElasticsearchClusterConfig:
        InstanceCount: !Ref NumberOfDataNodes
        InstanceType: !Ref InstanceTypeForDataNode
      ElasticsearchVersion: !Ref ElasticsearchVersion
      DomainName: !Ref ElasticSearchDomainName
      EBSOptions: 
        EBSEnabled: true
        VolumeSize: !Ref EBSVolumeSize
      VPCOptions:
        SecurityGroupIds:
          - !Ref WebServerSecurityGroup
        SubnetIds:
          - !Ref PrivateSubnetA

Outputs:
  BastionIP:
    Description: IP address of the Bastion Instance
    Value: !GetAtt Bastion.PublicIp

  WebsiteURL:
    Description: URL of the website
    Value: !Sub https://${DomainName}/

  DatabaseEndpoint:
    Description: Connection endpoint for the database
    Value: !GetAtt DBInstance.Endpoint.Address

  ElasticSearchEndpoint:
    Description: Elasticsearch domain endpoint
    Value: !GetAtt ElasticsearchDomain.DomainEndpoint
